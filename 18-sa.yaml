apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: expense
  name: sa-secret-reader
rules:
- apiGroups: [""]  # "" indicates API group
  resources: ["*"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "jane" to read pods in the "default" namespace.
# You need to already have a Role named "pod-reader" in that namespace.
kind: RoleBinding
metadata:
  name: sa-secret-reader
  namespace: expense
subjects:
# You can specify more than one "subject"
- kind: ServiceAccount
  name: expense-mysql-secret # "name" is case sensitive
  namespace: expense
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: default-trainee # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
---
kind: Pod
apiVersion: v1
metadata:
  name: sa-demo
  namespace: expense
spec:
# one pod can contain one or more containers
  serviceAccount: expense-mysql-secret
  initContainers: 
  - name: awscli
    image: amazon/aws-cli
    command: ['sh', '-c', 'aws secretsmanager get-secret-value  --secret-id expense/mysql/creds --query SecretString --output text > /secrets/.env']
    volumeMounts:
    - mountPath: /secrets
      name: cache-volume  
  containers:
  - name: nginx
    image: nginx
    volumeMounts:
    - mountPath: /secrets
      name: cache-volume 
  volumes:
  - name: cache-volume
    emptyDir: {}
    